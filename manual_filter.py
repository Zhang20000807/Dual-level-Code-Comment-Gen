import json
import re

special_situation = [
        "{@inheritDoc}",
        "/** {@inheritDoc} */",
        "// Time - O(N)",
        "/* public */",
        "/* package-private */",
        "/*@ReadOnly*/",
        "/*package*/",
        "/**\n     * @return\n     */",
        "/**\n     *\n     * @return\n     */",
        "/**\r\n     *\r\n     * @return\r\n     */",
        "/**\n\t * @return\n\t */",
        "/**\n   * Returns <code>0</code>.\n   *\n   * @return <code>0</code>.\n   */",
        "/* Error */",
        "/** Empty **/",
        "/** FREQ=MONTHLY;BYDAY=-1SA */",
        "// [END signin]",
        "/* java 6 only */",
        "// //@Override",
        "/**\n     * @private\n     */",
        "//** NOTICE!!!!!!!!!!!!!!!!!\r",
        "/**\n\t * 1.2\u4e2a\u4eba\u8d44\u6599\u4e2d\uff0c\u67e5\u8be2\u7528\u6237\u53d1\u8fc7\u7684\u4e3b\u9898\u6570\u91cf\n\t * @author dujiawei\n\t * @createDate 2019\u5e746\u67085\u65e5\n\t */",
        "/**\n\t * \u7f51\u7edc\u8bf7\u6c42\u51fa\u9519\u7684\u54cd\u5e94\u65b9\u6cd5,\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\n\t * @param out\n\t */",
        "//------------- Fechas ---------//******* DATOS GENERALES *********",
        "/**\n     * \u901a\u8fc7\u5bc6\u94a5\u5e93\u83b7\u53d6\u6570\u5b57\u8bc1\u4e66\uff0c\u4e0d\u9700\u8981\u5bc6\u7801\uff0c\u56e0\u4e3a\u83b7\u53d6\u5230Keystore\u5b9e\u4f8b\n     *\n     * @param keyStore\n     * @param alias\n     * @return\n     */",
        "/**\r\n     * Tests {@link FloatPredicates#FALSE}.\r\n     */",
        "// TODO ADD DOC",
        "// == main ==",
        "/** 9.4.6.4 [[GetOwnProperty]] (P) */",
        "// See #193",
        "// From TC 9.1\r",
        "/*@ pure @*/",
        "// #@@range/Call{",
        "// TODO: SS// TODO: sd// TODO: rw",
        "/**\n     * @since 5.6\n     */",
        "/**\n     * @param iDX\n     */",
        "/**\n     *\n     * @param evt\n     */",
        "// TODO: Implement this",
        "/**\n\t * \n\t * @param node\n\t * @param status\n\t */",
        "/* renamed from: a */",
        "/**\n\t * @param g2\n\t */",
        "/**\n     * INTERNAL:\n     */",
        "/**\n     * @param args\n     */",
        "//$NON-NLS-1$",
        "/*eq*/",
        "/*inv*/",
        "/*translation*/",
        "/*scaling*/",
        "/*ortho*/",
        "/*xform*/",
        "/*mul*/",
        "/*div*/",
        "/**\n\t * @param ctx\n\t */",
        "/**\n\t * @param args\n\t */",
        "// m\u00e9todo para sumar",
        "/* nullable */",
        "/**\n\t * @param className .\n\t * @param property  .\n\t * @return .\n\t */",
        "/**\n\t * \u6574\u4e2arequest\u8f6c\u6210\u4e00\u4e2abean\n\t * @param request\n\t * @param classOfT\n\t * @return\n\t */",
        "// Oh, Java.",
        "/**\n\t * {@inheritDoc}\n\t *\n\t * @since 5.0.0-b1\n\t */",
        "/**\n     * @param event\n     */",
        "/**\n     * @param x\n     * @return\n     */",
        "//------ ((1)): null",
        "// xsd:integer\r",
        "// Connection code was ^^^^^",
        "/**\n    * ISPN-3556\n    */",
        "/**\n\t * Not implemented yet.\n\t */",
        "/**\n     * @return json\n     * @author jiangzeyin\n     */",
        "// ********** Not implemented **************************************************************",
        "/**\n     * @param scope\n     * @param assignStatement\n     */",
        "//~---------------------------------------------< internal >",
        "// Actions --------------------------------------------------------------------------------------------------------",
        "// #@@range/resolveProgram{// #@@}",
        "/**\n     * TODO\u91cd\u5199compareTo\u65b9\u6cd5\u5b9e\u73b0\u6309\u5e74\u9f84\u6765\u6392\u5e8f\n     */",
        "/**\n\t * M\u00e9todo para manejar el ciclo\n\t */",
        "/**\n     * Barrier\n     */",
        "/**\n\t * @param part\n\t */",
        "/**\n\t * @param string\n\t * @return decrypted string\n\t */",
        "/**\n    * @param listener\n    */",
        "/**\n\t\t * Question 14\n\t\t * \n\t\t * @param string\n\t\t * @return\n\t\t */",
        "/** for OHARA-941 */",
        "/**\n     *\n     * See ECMA 9.5.\n     */",
        "/**\n\t * @since 1.0.0\n\t */",
        "//            K       V             input",
        "/**\n     * TODO: implement seriously\n     */",
        "// DOC:MENU// DOC:SERVICE_BINDING",
        "// ZAP: Added JavaDoc.",
        "// vnicUuid::weight",
        "/**\n     * import class\n     * @deprecated\n     */",
        "// this times t",
        "/**\n\t * @throws Exception on errors\n\t */",
        "/** @pdOid a506e90c-0108-45db-90d7-5aeeec9493a2 */",
        "/**\n     * Code\n     */",
        "// ---- Quads",
        "// TODO: document",
        "/**\n     *\n     * @param subject\n     * @param rootNode\n     */",
        "/**\n\t * f0 ::= OmpForLTCondition()\n\t * | OmpForLECondition()\n\t * | OmpForGTCondition()\n\t * | OmpForGECondition()\n\t */",
        "/**\r\n\t * Metodo de Instancia\r\n\t * \r\n\t * @return\r\n\t */",
        "/**\n     * @return the zoomMinX\n     */",
        "/**\n     * \u83b7\u53d6columnMap\n     * \n     * @return\n     */",
        "/**\n\t * TODO Documentation\n\t * \n\t * @return\n\t */",
        "/**\n\t * \u5220\u9664\u6211\u7684\u52a8\u6001\n\t *\n\t * @param subjectId\n\t */",
        "/* @Override */",
        "/**\n\t * @throws java.lang.Exception\n\t */",
        "// TODO(\"b/70727167\"): fix tests",
        "// END:ballooncount2",
        "// XXX Bad API",
        "/**\n\t * \n\t * @creation 2012-1-16 \u4e0b\u534812:04:21\n\t * @param args\n\t */",
        "// ==== M\u00e9thodes ====\r",
        "/**\n     * publish event\n     *\n     * @param event event object\n     */",
        "/* ORA - Logical Inclusive OR - $1d */",
        "// DOC:MENU// DOC:SERVICE_BINDING",
        "/*************POLLING*************/",
        "// CSOFF:DesignForExtension",
        "/**\n     * Inicjalizacja mockito\n     */",
        "/**\n     *\n     * @param menu\n     * @return\n     */",
        "// OTHER METHODS ////////////////////////////////////////////////",
        "/**not used. */",
        "// [AM]",
        "//- - SIGNATURE - - - - - - - - - - - - - - - - - - - - - - - -\t",
        "//Especificacion : guardar partida .",
        "/**\n     * \u7ed9\u5f15\u7528\u6807\u8bb0\u6dfb\u52a0\u4e00\u884c\u5185\u5bb9\n     * @param line\n     */",
        "//  <Main>",
        "/**\n     * @param statistic\n     * @param n\n     * @return\n     */",
        "/**\n\t * TODO: add documentation\n\t */",
        "/*\n     *\n     * launchMode\u4e3asingleTask\u7684\u65f6\u5019 \u901a\u8fc7Intent\u542f\u5230\u4e00\u4e2aActivity\n     * \u5982\u679c\u7cfb\u7edf\u5df2\u7ecf\u5b58\u5728\u4e00\u4e2a\u5b9e\u4f8b \u7cfb\u7edf\u5c31\u4f1a\u5c06\u8bf7\u6c42\u53d1\u9001\u5230\u8fd9\u4e2a\u5b9e\u4f8b\u4e0a\n     * \u4f46\u8fd9\u4e2a\u65f6\u5019 \u7cfb\u7edf\u5c31\u4e0d\u4f1a\u518d\u8c03\u7528\u901a\u5e38\u60c5\u51b5\u4e0b\u6211\u4eec\u5904\u7406\u8bf7\u6c42\u6570\u636e\u7684onCreate\u65b9\u6cd5 \u800c\u662f\u8c03\u7528onNewIntent\u65b9\u6cd5\n     *\n     */",
        "// player -> server",
        "/**\n\t * \n\t * @param cls\n\t * @param properyName\n\t * @return\n\t */",
        "/**\n     * 6 assert List\n     */",
        "/**\n     * 7 assert Map\n     */",
        "/**\n         * \u66ff\u6362\u53d1\u8a00\n         *\n         * @param slingModel\n         */",
        "/**\n\t * Time complexity: O(1)\n\t */",
        "/**\n\t * Time complexity: O(1)\n\t */",
        "/**\n   * @param colors \u30bb\u30c3\u30c8\u3059\u308bColor\u9054\n   */",
        "/**\n     * hier wird alles erstellt\n     */",
        "// </editor-fold>",
        "/* IDCT */",
        "// M\u00e9thode pour ouvrir le navigateur",
        "// 11111 and 99999",
        "/* access modifiers changed from: 0000 */",
        "// <public>// <interface>// </constructors>",
        "// float[] lerpedBuffer;",
        "/**\r\n     * \u5220\u9664\u76d1\u542c\u51fd\u6570\r\n     *\r\n     * @param registrationId \u6ce8\u518c\u76d1\u542c\u51fd\u6570\u65f6\u8fd4\u56de\u7684id\r\n     */",
        "/**\n\t * \u83b7\u53d6\u6e38\u620f\u7ed3\u679c\n\t * @param entity \u53c2\u6570\u5217\u8868\n\t * @return \u8fd4\u56de\u7ed3\u679c\n\t */",
        "//2013-06-21 <EMAIL>",
        "/**\n     * \n     * @return\n     */",
        "/**\n     * \u626b\u63cf\u8bbe\u5907\n     *\n     * @param enable\n     */",
        "/**\n         * @return int\n         */",
        "// Overrides superclass method",
        "//O(1)",
        "//00000; //EINE Millionen MUAHAHAAHAH;",
        "/**\n\t *\n\t * @param a\n\t * @param b\n\t */",
        "/**\n     * <p>\n     * F_DISP1_SAFT.\n     * </p>\n     *\n     * @return a double\n     */",
        "/**\u83b7\u53d6\u6211\u7684\u6536\u5165\u6c47\u603b\r\n\t * @param userId\r\n\t * @return\r\n\t */",
        "/**\n     * .\n     *\n     * @param g\n     */",
        "/**\n     * USB\u8bbe\u5907\u76840\u7aef\u53e3\u4e0a\u6267\u884c\u63a7\u5236\u4e8b\u52a1\uff08a\uff09\n     *\n     * @param var1     \u6b64\u4e8b\u52a1\u7684\u8bf7\u6c42\u8bf7\u6c42ID\n     * @param var2     \u6b64\u4e8b\u52a1\u7684value\u5b57\u6bb5\n     * @param baudRate \u6ce2\u7279\u7387\n     * @return \u8fd4\u56de\u4f20\u8f93\u6570\u636e\u7684\u957f\u5ea6\uff08\u62160\uff09\u8868\u793a\u6210\u529f\uff0c\u6216\u8fd4\u56de\u8d1f\u503c\u8868\u793a\u5931\u8d25\n     */",
        "// ****************************// ***** IFloodlightModule*****// ****************************",
        "// powinno by\u0107 prywatne\r",
        "/**\r\n     * @return\r\n     */",
        "/**Javadoc*/",
        "// 0 is default",
        "/**\n\t * @return Anwendung sollte terminieren.\n\t */",
        "/** GLvoid glEvalPoint1 (GLint i) */",
        "/** GLvoid glEvalPoint2 (GLint i, GLint j) */",
        "/**\n\t\t * Recreates the opcode representations.\n\t\t */",
        "/*\n    Getters and Setters\n     */",
        "// TODO: Test me",
        "/**\r\n     * 11.8.1 <code>&lt;</code>\r\n     */",
        "/**\r\n     * ints.\r\n     */",
        "/**\n\t * \u663e\u793a\u6240\u6709\u7c7b\u578b\n\t * @param \u7c7b\u578b\u7f16\u53f7\n\t * return List<Types> \u7c7b\u578b\u7c7b\n\t */",
        "/**\n\t* \u0412\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u0438\u043d\u044b \u043e\u0442\u0440\u0435\u0437\u043a\u0430 \u043c\u0435\u0436\u0434\u0443 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439 \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0439.\n\t* @param point - \u0442\u043e\u0447\u043a\u0430 \u0434\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u044c \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435\n\t* @return result \u2013 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0435 \u0442\u043e\u0447\u043a\u0430\u043c\u0438:\n\t*/",
        "// i.e., to \"type\"",
        "/**\n     * \u5f00\u59cb\u4e0b\u8f7d\n     *\n     * @param url\n     * @param fileName \u5b58\u50a8\u6587\u4ef6\u540d\n     * @param callback \u56de\u8c03\n     */",
        "// TODO: Remove after 2015-03-01",
        "/**\n     *\n     * @param afosId\n     * @param wmoId\n     * @return\n     */",
        "/**\n\t * \u30b5\u30fc\u30d0\u3092\u505c\u6b62\u3059\u308b\u3002\n\t * \n\t * @throws IOException \u5165\u51fa\u529b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\n\t */",
        "/**\n     * @param handler\n     * @return\n     */",
        "/**\r\n   * @param value\r\n   *\r\n   */",
        "/**\u81ea\u5b9a\u4e49\u7c7b\u578b\u5fc5\u987b\u8f6c\u4e3aJSONObject\u6216JSONArray\uff0c\u5426\u5219RequestParser\u89e3\u6790\u4e0d\u4e86\n\t */",
        "/**\n\t * \u68c0\u67e5\u6570\u636e\u7684\u5b8c\u6574\u6027\n\t * @param params\n\t * @return\n\t */",
        "/**\n     * \u6dfb\u52a0Handler\n     * @param ctx\n     * @throws Exception\n     */",
        "/**\n\t * \u5bfc\u51fa\u4fdd\u517b\u914d\u7f6e\u67e5\u8be2\n\t *\n\t * @param json\n\t * @return\n\t */",
        "// TODO DRY with #hasProperties",
        "// TODO DRY with #hasPropertiesOf",
        "/**This method \n\t * \n\t * @param \n\t * @param \n\t * \n\t * @return \n\t */",
        "/* SENTRY-1319 */",
        "/**\n     * - \u5185\u5bb9\uff1atimeout\u306e\u8a2d\u5b9a\u304c\u51fa\u6765\u308b\u304b\u3092\u78ba\u8a8d\u3059\u308b\n     * - \u7d50\u679c\uff1a\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u6642\u95935000\u30df\u30ea\u79d2\u304c\u53d6\u5f97\u51fa\u6765\u308b\u3053\u3068\n     */",
        "/*public Set<Integer> getMappedEntitiesOnto1(){\n\t\treturn mapped_entities_onto1;\n\t}\n\t\n\tpublic Set<Integer> getMappedEntitiesOnto2(){\n\t\treturn mapped_entities_onto2;\n\t}*/",
        "/**\n\t * \n\t * @param index1\n\t * @param index2\n\t */",
        "/**\n\t * \n\t * @param ide1\n\t * @param ide2\n\t * @return\n\t */",
        "//m\u00e9todo principal, quando executar",
        "/*public void onDestroyUizaVideo() {\n        releaseAdsLoader();\n    }*/",
        "/**\n     * @param prev Previous.\n     */",
        "/**\r\n\t * @throws Exception\r\n\t */",
        "/** Liberacao para o menu */",
        "// T:O(n), S:O(n)",
        "/* (non-Javadoc)\r\n\t *  //\u83b7\u53d6\u6240\u6709\u7684\u4e00\u7ea7\u5546\u54c1\u7c7b\u578b\r\n\t */",
        "/** Does nothing */",
        "// 1) Row",
        "// khoi tao mtarial search",
        "/**\n\t * \u4e0b\u53482:58:36\n\t * \n\t * @author zhangyh2 TODO\n\t */",
        "/**\r\n\t * TODO\r\n\t * @param dataSrcClsStr\r\n\t * @return\r\n\t */",
        "/**\n\t * f0 ::= <CASE>\n\t * f1 ::= ConstantExpression()\n\t * f2 ::= \":\"\n\t * f3 ::= Statement()\n\t */",
        "/**\n     * \u9805\u76ee\u306e\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u30e1\u30cb\u30e5\u30fc\u9078\u629e\n     *\n     * @param collectionView \u4e00\u89a7\u8868\u793a\n     * @param view           \u9805\u76ee\u8868\u793a\n     * @param item           \u9805\u76ee\n     */",
        "//----Levels",
        "// overridden methods (variable header)//////////////////////////////////////////////////",
        "/**\r\n\t * \u5904\u7406\u4e2d\u6587\r\n\t * @return\r\n\t */",
        "/**\n     *\n     * @param itm\n     */",
        "/**\n\t * @param event event\n\t */",
        "/** Overridden */",
        "//iprivate       = %xE000-F8FF / %xF0000-FFFFD / %x100000-10FFFD",
        "/**\n     * \u89e3\u538b\n     *\n     * @param filePath\n     * @return\n     */",
        "/**\n     * \u5904\u7406\u903b\u8f91\n     *\n     * @return\n     */",
        "/** Tests that need JDK 1.6. */",
        "/**\n\t * @param b\n\t */",
        "/**\n\t * @param fileStorageProvider\n\t * @param project\n\t * @return\n\t */",
        "/**\n   * @return TODO Complete Documentation\n   */",
        "/**\n\t * @changed OLI 30.10.2013 - Added.\n\t */",
        "// private Pipeline pipeline;",
        "//\tprivate ArticleDao articleDao;//\t@Autowired",
        "/**\n     * @param imgPath\n     * @return\n     */",
        "// \u6700\u540e\u5199\u65f6\u95f4// XXX: \u8f93\u51fa\u4e2d\u9996\u5148\u5199\u6570\u636e, \u7136\u540e\u5199\u4fe1\u606f,",
        "/** \r\n\t * ..., b1, a1\r\n\t * ==>\r\n\t * ..., b1, a1, b1\r\n\t */",
        "/**\r\n\t * ..., b1, a2 \r\n\t * ==> \r\n\t * ..., b1, a2, b1\r\n\t */",
        "/** \r\n\t * ..., b2, a1\r\n\t * ==>\r\n\t * ..., b2, a1, b2\r\n\t */",
        "/** \r\n\t * ..., b2, a2\r\n\t * ==>\r\n\t * ..., b2, a2, b2\r\n\t */",
        "/**\r\n\t * ..., c1, b1, a2\r\n\t * ==>\r\n\t * ..., c1, b1, a2, c1\r\n\t */",
        "/**\r\n\t * ..., c1, b2, a1\r\n\t * ==>\r\n\t * ..., c1, b2, a1, c1\r\n\t */",
        "// wml2:Collection/wml2:metadata",
        "/**\n\t * \n\t * @param idOmbrellone\n\t * @param price\n\t * @param type\n\t */",
        "/**\n\t * \n\t * @param idOmbrellone\n\t */",
        "/**\n\t * \n\t * @param ombrelloneType\n\t */",
        "/**\n     * @exclude\n     */",
        "// from interface PlayerProvider",
        "/**\n\t * \n\t * @param fade\n\t */",
        "// TODO is this right?",
        "/**\n     *  \u8ba1\u7b97constant\u5e38\u6570\u7684\u53d6\u503c\n     * @param p   log2m\n     * @param m   m\n     */",
        "/**\n     * @see WorkingMemory\n     */",
        "/**\n     * \u83b7\u53d6\u5f53\u524d\u7f13\u51b2\u7684\u7f51\u901f\n     * @return                                  \u83b7\u53d6\u7f51\u7edc\n     */",
        "/**\n\t * \n\t * @param feedback\n\t */",
        "/**\r\n     * \r\n     * @param card1\r\n     * @param card2\r\n     */",
        "// < 0 se o1 < o2// = 0 se o1 = o2// > 0 se o1 > o2",
        "// GEN-LAST:event_buttonAcceptActionPerformed",
        "/**\n     * Fecha o di\u00e1logo\n     * \n     * @param evt\n     */",
        "// since Java SE 9",
        "/**\n     * Opdracht 2\n     */",
        "/*AddTri*/",
        "/**\n   * TODO\n   * @return TODO\n   * \n   * @since 1.5\n   */",
        "// better style?",
        "// line 956 \"../../../../ump/mbt_parser_src.ump\"",
        "/* @Before */",
        "/**\n     * @author <NAME>\n     * @version 1.0\n     * @since 06/01/2015\n     */",
        "/*Generated! Do not modify!*/",
        "// from interface ContentProvider",
        "//, encPID, accelPID;",
        "/**\n     * D\u00e9clenche l'effet\n     */",
        "// [km]",
        "/**\n     * 19.4.1.1 Symbol ( [ description ] )\n     */",
        "/**\n\t * \u4e0b\u53482:33:35\n\t * \n\t * @author zhangyh2 TODO\n\t */",
        "/*\n   * Object\n   */",
        "// TODO : 107",
        "/**\n\t * @generated\n\t */",
        "//----new Method ===============================================================//",
        "// 1M + 16B   1000   1G",
        "// public > protected > default > private",
        "//            K       V             input",
        "/** @method flags=const */",
        "/**\n     * 22.2.1.1 %TypedArray% ( )\n     */",
        "/*public*/",
        "/** UC1 TC1.2 */",
        "//#ifdef notdef",
        "/**\n     * \u8bfb\u53d6\u8054\u7cfbJboSet\n     * \n     * @param name\n     *            \u8054\u7cfb\u540d\n     */",
        "/// [row[i], row[j], row[k]]",
        "/** Char-to-Char. */",
        "/* IAccessible2::get_extendedRole([out] pbstrExtendedRole) */",
        "/* IAccessible2::get_localizedExtendedRole([out] pbstrLocalizedExtendedRole) */",
        "/* IAccessible2::get_nExtendedStates([out] pNExtendedStates) */",
        "/* IAccessibleHyperlink::get_valid([out] pValid) */",
        "// ====// Rake// ====",
        "/**\n     * XXX DOC\n     */",
        "// metas: US831",
        "/**\n\t * API name: {@code order}\n\t */",
        "/**quando o usu\u00e1rio est\u00e1 digitando*/",
        "/**\n\t * Returns Y value.\n\t * \n\t * @return Y value.\n\t */",
        "//\tSERVICES_PLAYER_INSTANCES_RECEIVED\",nil,@{@\"instances\":pinsts});",
        "/* see superclass */",
        "/*@\r\n     @ ensures \\result == this.start;\r\n     @*/",
        "/*@\r\n     @ ensures \\result == this.end;\r\n     @*/",
        "/*@\r\n     @ ensures \\result == this.pieceTaken;\r\n     @*/",
        "/*@\r\n     @ ensures \\result == this.pieceMoved;\r\n     @*/",
        "/* package private */",
        "//TODO update and docs",
        "// <public>// <interface>// </constructors>",
        "/*public? */",
        "/**\n   * <pre>\n   *   \u53ef\u53d8\u53c2\u6570:\n   *   1. \u672c\u8d28\u5c31\u662f\u4e2a\u6570\u7ec4\n   *   char...\n   * </pre>\n   */",
        "/**\n    * Not supported.\n    */",
        "// </editor-fold>",
        "//cek apakah password valid",
        "//        </snip>",
        "/**\n   * @y.exclude\n   */",
        "// It allows to ",
        "/** Liberacao para o menu */",
        "// tick()\r",
        "// render()\r",
        "// Evento de Accion - Respuesta\r",
        "/**\n\t * returns null\n\t */",
        "// JDK 8 language features:",
        "/**\n     * returns false\n     */",
        "/**\n     * returns 0\n     */",
        "/**\r\n    * metodo para coletar marcadores.\r\n    */",
        "// https://stackoverflow.com/a/36105483/7621349",
        "/**\n\t * Not implemented yet.\n\t */",
        "// jnS()",
        "// store()",
        "// add()",
        "// jump()",
        "// addI()",
        "/**\n\t * time  : O(1)\n\t * space : O(1)\n\t * */",
        "/**\n\t * time  : O(tweet)\n\t * space : O(1)\n\t * */",
        "// 4 ^ 0 = 1 times",
        "// 4 ^ 1 = 4 times",
        "// 4 ^ 2 == 16 times",
        "// 4 ^ 3 == 64 times",
        "// 4 ^ 4 == 256 times",
        "// 4 ^ 5 == 1,024 times",
        "// 4 ^ 6 == 4,096 times",
        "// 4 ^ 7 == 16,384 times",
        "// 4 ^ 8 == 65,536 times",
        "// 4 ^ 9 == 262,144 times",
        "// 4 ^ 10 == 1,048,576 times",
        "// 4 ^ 11 == 4,194,304 times",
        "//> visit-function-stmt//< visit-expression-stmt",
        "/**\n     * Ajout des evenements\n     */",
        "// From tc 7.1\r",
        "// <private>// </protected>",
        "// ]NOCPP]",
        "// Metodos de inspeccion de codigo// ----",
        "/**\n     * 25.4.1.1.1 IfAbruptRejectPromise (value, capability)\n     */",
        "/**\n     * time: O(2^N * N)\n     * space: O(N)\n     */",
        "// Pausa de la actividad",
        "/**\n\t * time  : O(1)\n\t * space : O(1)\n\t * */",
        "// Insn: VPACKUSWB xmm1, xmm1, xmm2// -----// Insn: VPACKUSWB xmm1, xmm2, xmm3/m128",
        "// Insn: VMOVDQU xmm2/m128, xmm1",
        "// Insn: KTESTD k1, k2",
        "// Insn: VPMOVZXBW zmm1, m256",
        "// Insn: VMOVDQU16 zmm1, m512// -----// Insn: VMOVDQU16 zmm1 {k1}{z}, zmm2/m512",
        "// Insn: VMOVDQU16 zmm1, k1:z, m512",
        "// Insn: VMOVDQU16 m512, zmm1// -----// Insn: VMOVDQU16 zmm2/m512 {k1}{z}, zmm1",
        "// Insn: VMOVDQU16 m512, k1, zmm1",
        "// Insn: VPBROADCASTW zmm1, reg// -----// Insn: VPBROADCASTW zmm1 {k1}{z}, reg",
        "// Insn: VPCMPUW k1, zmm2, zmm3, imm8// -----// Insn: VPCMPUW k1 {k2}, zmm2, zmm3/m512, imm8",
        "// Insn: VPCMPUW k1, k2, zmm2, zmm3, imm8// -----// Insn: VPCMPUW k1 {k2}, zmm2, zmm3/m512, imm8",
        "// Insn: VPMOVWB m256, zmm2// -----// Insn: VPMOVWB ymm1/m256 {k1}{z}, zmm2",
        "// Insn: VPMOVWB m256, k1, zmm2",
        "// Insn: VPMOVZXBW zmm1, k1, m256// -----// Insn: VPMOVZXBW zmm1 {k1}{z}, ymm2/m256",
        "/*% if (feature.gNoEdges) { %*/",
        "/*% } else { %*/",
        "/*% if (feature.bfs) { %*/",
        "/*% } else if (feature.dfs) { %*/",
        "/**\n     * f0 -> MainClass()\n     * f1 -> ( TypeDeclaration() )*\n     * f2 -> <EOF>\n     */",
        "//+ (id)arrayWithCapacity:(NSUInteger)numItems",
        "// IMJ-279, IMJ-228, IMJ-249\r",
        "// this times t",
        "/**\n     * Funkce pro rizeni robota.\n     */",
        "/**\n     * ISO C Standard G.6.2.2\n     */",
        "// arg(int n)",
        "/* JDK 1.6 */",
        "/**\n     * Einstellung nach \"no.\"\n     */",
        "/**\n     * Einstellung w\u00e4hrend einer L\u00f6sungsberechnung\n     */",
        "//// 32 bit data//",
        "//_CODE_:resetArrow:902490:",
        "/*\t@Autowired\n\tprivate SimpMessagingTemplate simpMessagingTemplate;*/",
        "/**\n\t * \n\t * \u4e0b\u53483:37:03\n\t * \n\t * @author zhangyh2 GuideAnim.java TODO\n\t */",
        "/**\n\t * \n\t * \u4e0a\u534811:23:10\n\t * \n\t * @author zhangyh2 Welcome.java TODO\n\t */",
        "/*% if (feature.gNoEdges) { %*/",
        "/*% } else { %*/",
        "//CREAR SOBREESCRIBIR UN METODO\r",
        "// 1 metodo para insertar\r",
        "//2 metodo para eliminar\r",
        "//3 metodo para actualizar\r",
        "// } extends AbstractJdbcDatabaseTest {",
        "// Precnik//GEN-LAST:event_jTextField4KeyTyped",
        "// Kolicina//GEN-LAST:event_jTextField7KeyTyped",
        "/**\r\n     * \u5224\u65ad2\u4e2a\u77e9\u5f62\u662f\u5426\u91cd\u53e0\r\n     * @param rec1\r\n     * @param rec2\r\n     * @return\r\n     */",
        "/**\r\n     * vdest = tensor*a \r\n     */",
        "/**\r\n     * vdest = I*a \r\n     */",
        "/**\n\t * Prida ovladani hrace\n\t */",
        "//    RNCameraViewHelper.emitFacesDetectedEvent(this, data);",
        "//Submen\u00fa 'salir'//GEN-LAST:event_jMenu5ActionPerformed",
        "// A\u00c7\u00c3O DO BOT\u00c3O IMPRIMIR ",
        "//!< Array of pixels",
        "/* IMensajeRIPPeticion */",
        "// Time - O(N)",
        "// Java 1.6+ @Override",
        "//f\u00fcgt ActionListener zu den Men\u00fcfunktionen hinzu.\r",
        "// TODO: 2019-07-23 private!!!",
        "/**\n\t * id\n\t */",
        "// code)// (unused// NO_UCD",
        "//public Vector getFeatures() {",
        "/**\r\n    * metodo para coletar marcadores.\r\n    */",
        "/**\n\t\t * f0 ::= SizeofTypeName()\n\t\t * | SizeofUnaryExpression()\n\t\t */",
        "/**\n\t\t * f0 ::= <SIZEOF>\n\t\t * f1 ::= UnaryExpression()\n\t\t */",
        "/*non-public*/",
        "/**\n     * EVENTO: Bot\u00f3n Mostrar Detalles \u00daltima Busqueda\n     */",
        "//{{{ reloadDirectory() method\r//}}}\r",
        "//{{{ char convertUnvoicedHankakuKanaToZenkaku(char)//}}}",
        "/**\n     * Cria\u00e7\u00e3o da inst\u00e2ncia Servi\u00e7o\n     */",
        "// ! TODO: implement this method",
        "//pt count\uac00 0\uc778 \uc560\ub4e4\r",
        "// line 1599 \"../../../../src/UmpleInternalParser_CodeTrait_StateMachine.ump\"",
        "/**\r\n         * @return -1\r\n         */",
        "//---- Oneof",
        "//+@ requires options != null;",
        "/*@Poly*/",
        "/*@Tainted*/",
        "/* see superclass */",
        "// JCR 2.0 methods",
        "// koniec programu//GEN-LAST:event_jButton2ActionPerformed",
        "//\t}//\t\t\"SHA-256\": \"effb46bba03f6c8aea5c653f9cf984f170dcdd3bbbe2ff6843c3e5da0e698766\"//\t\"hashes\": {",
        "//red [80, 99] [120, 150], [45, 70], [0,27]",
        "/**\n\t * Time complexity: O(1)\n\t */",
        "/**\n\t * Time complexity: O(|E|)\n\t */",
        "//RESOLU\u00c7\u00c3O 2 EM 1",
        "// line 308 \"../../../../src/SimpleMetrics_SM.ump\"",
        "// line 399 \"../../../../src/SimpleMetrics_SM.ump\"",
        "// line 547 \"../../../../src/SimpleMetrics_SM.ump\"",
        "/**\n * ints.\n */",
        "/*@Pure*/",
        "/*\n        time complexity: O(1)\n        space complexity: O(1)\n     */",
        "/**\n     * Zerst\u00f6rt das Fenster der Graphikengine.\n     */",
        "/** @pdOid fe55cab9-a4d2-493f-a5ae-b84a4d457712 */",
        "/*</property>*/",
        "//Papel ex, ROLE_SECRETARIO, ROLE_GERENTE",
        "//- @#1String ref StrCopy//- @#0String ref StrBuiltin",
        "// M\u00e9todo executado pelo thread",
        "//--------------------------JDBC 2.0-----------------------------------//#IFDEF(JDBC2.0)",
        "//{{{ getSearchMatcher() method//}}}",
        "// O(log n)",
        "/**\n\t * f0 ::= <SIZEOF>\n\t * f1 ::= UnaryExpression()\n\t */",
        "// type()",
        "/*_virtual_*/",
        "// assertFullyCovered()",
        "/*synchronized*/",
        "/**\n     * AsyncGeneratorFunction (p1, p2, ... , pn, body)\n     */",
        "/**\n     * <p>Update {@link VertexDescriptor}</p>\n     */",
        "//boolean hasNext = true;",
        "// JCR 2.0 methods",
        "// From org.w3c.dom.Document:",
        "// From org.w3c.dom.Text:",
        "/**\r\n\t *\tEigenschaften abfragen\r\n\t */",
        "/* *** ODSAendTag: ListADT *** */",
        "/**\n     * Abbrechen-Knopf gedr\u00fcckt\n     *\n     * @param evt\n     */",
        "/**\n     * Zur\u00fccksetzen-Knopf wurde gedr\u00fcckt\n     *\n     * @param evt\n     */",
        "// M[6, 5] Gear 31: [2, 3, 6, 21], [1, 4, 5, 9]",
        "//// Overrides FtcOpMode abstract method.//",
        "// ZAP: Added JavaDoc.",
        "/*KARIZ E*/",
        "//=*=*=*=*=*=*=*=*=*=*=*=*=*== fonction usuel ==*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=\r",
        "/**\n\t * Not used\n\t */",
        "/**\r\n\t* @generated\r\n\t*/",
        "/**\n\t * never will be used\n\t */",
        "//CREAR SOBREESCRIBIR UN METODO\r",
        "/** @pdOid 4f319826-e2be-4ec1-bab8-f76e0a029103 */",
        "/** @pdOid 92030ef3-89ab-4789-8f75-b346be77b36c */",
        "// shard4: top bits:01  40000000:7fffffff",
        "/**\n\t * f0 ::= OmpPragma()\n\t * f1 ::= <BARRIER>\n\t * f2 ::= OmpEol()\n\t */",
        "// {{{RME operation 'buttonClicked(int)'// }}}RME",
        "// inicjalizajca jest konieczna",
        "// 3: G G// 2: E E// 1: G E// 0: E G// -1: not good",
        "/**\n   * \u6b64\u65b9\u6cd5\u5e76\u6ca1\u6709\u5b9e\u73b0\uff0c\u8c03\u7528\u4f1a\u629b\u51faUnsupportedOperationException\n   */",
        "/**\n\t * f0 ::= \"(\"\n\t * f1 ::= ( OldParameterList() )?\n\t * f2 ::= \")\"\n\t */",
        "/**\r\n     * chama o metodo exibirTabuleiro\r\n     */",
        "// =meth SysCls \"sys\" sleep:",
        "// n\u00e5r der klikkes p\u00e5 knappen",
        "//#if __ANDROID__ || __CN1__",
        "/**\n\t *@\u63cf\u8ff0\t\t\uff1a\n\t *@\u521b\u5efa\u4eba\t: kangzhidong\n\t *@\u521b\u5efa\u65f6\u95f4\t: Mar 24, 20163:50:41 PM\n\t *@return\n\t *@\u4fee\u6539\u4eba\t: \n\t *@\u4fee\u6539\u65f6\u95f4\t: \n\t *@\u4fee\u6539\u63cf\u8ff0\t: \n\t */",
        "/*public? */"
        "// D.3.2 pg 102 (see Note:)",
        "// Java 11, writeString, append mode",
        "/* JDK 1.6 */",
        "// </snip>",
        "// Ve a la pantalla...",
        "// ###zaj - tbd",
        "// private methods:",
    ]
at_list = [
        "@inheritDoc",
        "@ReadOnly",
        "@Override",
        "@private",
        "@author",
        "@see",
        "@link",
        "@since",
        "@param",
        "@Before",
        "@generated",
        "@Autowired",
    ]


annotated_codes = [
        '//\tprivate DataSource securityDataSource;//\t@Qualifier("securityDataSource")//\t@Autowired// add a reference to our security data source',
        '//\t}//\t\treturn RedisClientBuilderC2C.buildRedissionClient(rc);//\tpublic RedissonClient createRedisClientNew(@Autowired RedisConfigurationManageC2C rc) {//\t@Bean(MANAGE_REDIS)//\tpublic static final String MANAGE_REDIS = "manageRedis";',
        '//\tprivate ArticleDao articleDao;//\t@Autowired',
        '/*@Autowired\n\tPasswordEncoder passwordEncoder;\n\n\t@Bean\n\tBCryptPasswordEncoder passwordEncoder() \n\t{\n\t    return new BCryptPasswordEncoder();\n\t}\n*/',
        '//\tCacheManager cacheManager;\r//\t@Autowired\r',
        '//\tRoleUserRepository roleUserRepository;//\t@Autowired',
        '/*\t@Autowired\n\tprivate SimpMessagingTemplate simpMessagingTemplate;*/',
        '/*   @Autowired\n    StudentServiceImpl(StudentRepository studentRepository) {\n        this.studentRepository = studentRepository;\n        //this.studentMapper=studentMapper;\n        \n    }*/',
        '// private StockAvaliablePopulator stockAvaliablePopulator;// @Autowired',
        '//    }//                .withUser(userName).password(<PASSWORD>).authorities(userRole);//        authenticationMgr.inMemoryAuthentication()//    public void configureGlobal(AuthenticationManagerBuilder authenticationMgr) throws Exception {//    @Autowired//',
        '//\tprivate GasSmokeSensorRepository repository;//\t@Autowired',
        '//    private UserGroupMapper userGroupMapper;//\t@Autowired',
        '//\tHttpServletRequest httprequest;//\t@Autowired',
        '//LabelRepository labelRepository;//@Autowired'
        '// boolean test(T a1,byte a2) ;',
        "/**\r\n     * boolean decides when it's Ok to finish\r\n     */",
        '// boolean testIntBool(int a2,boolean a1) ;',
        '//boolean mRuning = true;',
        '/*boolean autoDrive(double distance)\n  {\n    boolean done=false;\n\n    if(Math.abs(RobotMap.leftFront.getEncoder().getPosition())>distance&&Math.abs(RobotMap.rightFront.getEncoder().getPosition())>distance)\n    \n      done=true;\n    else done=false;\n    drive.arcadeDrive(move,turn);\n\n    if(done)\n    {\n      isAutoDrive=false;\n      RobotMap.leftFront.getEncoder().setPosition(0);\n      RobotMap.rightFront.getEncoder().setPosition(0);\n    }\n\n    return done;\n  }\n  */',
        '//\tboolean isRET=false;',
        '//boolean mRuning = true;',
        '/*\n    boolean checkCollision(btCollisionObject obj0, btCollisionObject obj1) {\n        //wraps our objects to use bullet library\n        CollisionObjectWrapper co0 = new CollisionObjectWrapper(obj0);\n        CollisionObjectWrapper co1 = new CollisionObjectWrapper(obj1);\n\n        //this takes two shapes and finds the right algorithm to detect collisions\n        btCollisionAlgorithm algorithm = dispatcher.findAlgorithm(co0.wrapper, co1.wrapper);\n\n        btDispatcherInfo info = new btDispatcherInfo();\n        btManifoldResult result = new btManifoldResult(co0.wrapper, co1.wrapper);\n\n        algorithm.processCollision(co0.wrapper, co1.wrapper, info, result);\n\n        //if we have anything on our hitlist, then we have a collision to set return value\n        boolean hitSomething = result.getPersistentManifold().getNumContacts() > 0;\n\n        dispatcher.freeCollisionAlgorithm(algorithm.getCPointer());\n        result.dispose();\n        info.dispose();\n        co1.dispose();\n        co0.dispose();\n\n        return hitSomething;\n    }\n\n    private Vector3 thisPos = new Vector3();\n\n    protected boolean isVisible(final Camera cam, final GameObject instance) {\n        //instance.transform.getTranslation(thisPos);\n        //thisPos.add(instance.center);\n\n        return cam.frustum.boundsInFrustum(instance.bounds);\n        //return cam.frustum.boundsInFrustum(thisPos, instance.dimensions);\n    }\n\n    public void CreateCube(Vector3 pos, Vector3 direction){\n\n        //Model otherCube = assets.get("otherCube.g3db", Model.class);\n        //GameObject hitModel = zombies.get(userValue1 - 10);\n        //playerGo1.body.proceedToTransform(playerGo1.transform);\n        Vector3 worldPosition = new Vector3();\n        //hitModel.transform.getTranslation(worldPosition);\n        //hitModel.transform.setTranslation(new Vector3(0, 0, 0));\n        GameObject cube;\n\n        for(int x = 0; x < 1 ;x++) {\n            //playerGo1 = new GameObject()\n            cube = new GameObject(otherCube, .5f, 1f, 3);\n            //cube.transform.setTranslation(pos);\n            Vector3 create = new Vector3();\n            playerGo.transform.getTranslation(create);\n            cube.transform.setTranslation(create.add(0,2,0));\n            cube.body.proceedToTransform(cube.transform);\n            cube.bounds.set(new Vector3(pos.x - 1f, 2, pos.z + 1f), new Vector3(pos.x + 1f, 10f, pos.z - 1f));\n            //cube.body.setUserValue(-1);\t\t\t\t\t\t\t\t\t\t//this is used to tag us for collisions\n            //cube.body.setLinearFactor(new Vector3(.5f,0,.5f));\n            //cube.body.setAngularFactor(.5f);\n            cube.body.setCollisionFlags(cube.body.getCollisionFlags() | btCollisionObject.CollisionFlags.CF_CUSTOM_MATERIAL_CALLBACK);\n            //playerGo.body.setWorldTransform(playerGo.transform);\n            //playerGo1.body.setWorldTransform(playerGo1.transform);\n            //dynamicsWorld.addRigidBody(playerGo1.body);//, OBJECT_FLAG, GROUND_FLAG\n            cube.body.setContactCallbackFlag(DEBRIS_FLAG);\n            cube.body.setContactCallbackFilter(0);\n\n\n            dynamicsWorld.addRigidBody(cube.body, ENEMY_FLAG, ALL_FLAG);//, ENEMY_FLAG, ALL_FLAG);\n            cube.body.activate();//new Vector3(0,1000,0)\n            float force = 10;\n            Vector3 forcer = new Vector3(direction.x * force, 0, direction.z * force);\n            cube.body.applyImpulse(forcer, new Vector3(0,0,0));\n\n\n            Vector3 playerPos = new Vector3();\n            playerGo.transform.getTranslation(playerPos);\n            Gdx.app.log("Warn", "Made a cube " + pos + " player pos " + playerPos);\n\n            debris.add(cube);\n\n        }\n    }\n\n    public void DeleteZombie(int index){\n\n        int size = world.buckets[(int) zombieBucket.get(index).x][(int) zombieBucket.get(index).y].size;\n        boolean found = false;\n        int foundIndex = 0;\n\n        for(int x = 0; x < size; x++){\n            if (zombies.get(index) == world.buckets[(int) zombieBucket.get(index).x][(int) zombieBucket.get(index).y].get(x)){\n                //found = true;\n                foundIndex = x;\n            }\n        }\n\n        Gdx.app.log("Warn", "Clearing zombie");\n        zombies.get(index).dispose();\n        zombies.set(index,null);\n\n        //zombieBucket.set(userValue1 - 10,null);\t\t//this isnt a reference to the gameobject so dont need to clear it\n        //world.buckets[(int) zombieBucket.get(index).x][(int) zombieBucket.get(userValue1 - 10).y].removeIndex(foundIndex);\n\n    }\n    */',
        '//}//  boolean done;//  int sx, sy, ex, ey;//class MyWinData extends GWinData {// */// * @author <NAME>// * // * that is specific to a particular window.// * Simple class that extends GWinData and holds the data ///**////}  //  }//    appc.rect(data2.sx, data2.sy, data2.ex, data2.ey);//    appc.rectMode(CORNERS);//    }//      appc.fill(128);//    if (data2.done) {//    appc.noFill();//    appc.strokeWeight(2);//    appc.stroke(255);//  if (!(data2.sx == data2.ex && data2.ey == data2.ey)) {//  MyWinData data2 = (MyWinData)data;//void windowDraw(GWinApplet appc, GWinData data) {// */// * @param data the data for the GWindow being used// * @param appc the PApplet object embeded into the frame// * // * Handles drawing to the windows PApplet area///**////}//  }//    break;//    data2.ey = appc.mouseY;//    data2.ex = appc.mouseX;//  case MouseEvent.DRAG://    break;//    data2.done = true;//    data2.ey = appc.mouseY;//    data2.ex = appc.mouseX;//  case MouseEvent.RELEASE://    break;//    data2.done = false;//    data2.sy = data2.ey = appc.mouseY;//    data2.sx = data2.ex = appc.mouseX;//  case MouseEvent.PRESS://  switch(event.getAction()) {//  MyWinData data2 = (MyWinData)data;//void windowMouse(GWinApplet appc, GWinData data, MouseEvent event) {// */// * @param event the mouse event// * @param data the data for the GWindow being used// * @param appc the PApplet object embeded into the frame// *  // * Handles mouse events for ALL GWindow objects///**////}//  }//    button.setEnabled(false);//    lblInstr.setVisible(true);//    createWindows();//  if (window == null && event == GEvent.CLICKED) {//void handleButtonEvents(GButton button, GEvent event) {// */// * @param button// * Click the button to create the windows.///**////}//  }//    window[i].addMouseHandler(this, "windowMouse");//    window[i].addDrawHandler(this, "windowDraw");//    window[i].addData(new MyWinData());//    window[i].setBackground(col);//    window[i] = new GWindow(this, "Window "+i, 70+i*220, 160+i*50, 200, 200, false, JAVA2D);//    col = (128 << (i * 8)) | 0xff000000;//  for (int i = 0; i < 3; i++) {//  window = new GWindow[3];//  int col;//void createWindows() {//*///and drawing code.//Create the three windows so that they share mouse handling ///**',
        '// boolean completed = false;',
        '//boolean hasNext = true;',
        '/**\n\t * boolean isDenenerate() \n\t * \n\t * @return true if the component is degenerate (has no proper edges with two distinct terms)\n\t */'
        '// }// }// int x; // illformed,redeclaration of x// else {// }// int x; // illformed,redeclaration of x// if (int x = 1) {// int foo() {',
        '// }// (int (*)(int))&f; // cast expression as selector// void g() {// int (&rfd)(double) = f; // selects f(double)// int (&rfi)(int) = f; // selects f(int)// int (*pfe)(...) = &f; // error: type mismatch// int (*pfi)(int) = &f; // selects f(int)// int (*pfd)(double) = &f; // selects f(double)// int f(int);// int f(double);',
        '// int applyAsIntInt1Obj2Obj0(int a2,T2 a3,T1 a1) ;',
        '// int sodium_set_misuse_handler(void * handler);',
        '// int crypto_aead_aes256gcm_encrypt(unsigned char * c, unsigned long long * clen_p, const unsigned char * m, unsigned long long mlen, const unsigned char * ad, unsigned long long adlen, const unsigned char * nsec, const unsigned char * npub, const unsigned char * k);',
        '// int crypto_aead_aes256gcm_decrypt(unsigned char * m, unsigned long long * mlen_p, unsigned char * nsec, const unsigned char * c, unsigned long long clen, const unsigned char * ad, unsigned long long adlen, const unsigned char * npub, const unsigned char * k);',
        '// int crypto_aead_aes256gcm_encrypt_detached(unsigned char * c, unsigned char * mac, unsigned long long * maclen_p, const unsigned char * m, unsigned long long mlen, const unsigned char * ad, unsigned long long adlen, const unsigned char * nsec, const unsigned char * npub, const unsigned char * k);',
        '// int crypto_aead_aes256gcm_decrypt_detached(unsigned char * m, unsigned char * nsec, const unsigned char * c, unsigned long long clen, const unsigned char * mac, const unsigned char * ad, unsigned long long adlen, const unsigned char * npub, const unsigned char * k);',
        '// int crypto_aead_aes256gcm_encrypt_afternm(unsigned char * c, unsigned long long * clen_p, const unsigned char * m, unsigned long long mlen, const unsigned char * ad, unsigned long long adlen, const unsigned char * nsec, const unsigned char * npub, const crypto_aead_aes256gcm_state * ctx_);',
        '// int crypto_aead_aes256gcm_encrypt_detached_afternm(unsigned char * c, unsigned char * mac, unsigned long long * maclen_p, const unsigned char * m, unsigned long long mlen, const unsigned char * ad, unsigned long long adlen, const unsigned char * nsec, const unsigned char * npub, const crypto_aead_aes256gcm_state * ctx_);',
        '// int crypto_aead_aes256gcm_decrypt_detached_afternm(unsigned char * m, unsigned char * nsec, const unsigned char * c, unsigned long long clen, const unsigned char * mac, const unsigned char * ad, unsigned long long adlen, const unsigned char * npub, const crypto_aead_aes256gcm_state * ctx_);',
        '// int crypto_aead_chacha20poly1305_ietf_decrypt(unsigned char * m, unsigned long long * mlen_p, unsigned char * nsec, const unsigned char * c, unsigned long long clen, const unsigned char * ad, unsigned long long adlen, const unsigned char * npub, const unsigned char * k);',
        '// int crypto_aead_chacha20poly1305_ietf_decrypt_detached(unsigned char * m, unsigned char * nsec, const unsigned char * c, unsigned long long clen, const unsigned char * mac, const unsigned char * ad, unsigned long long adlen, const unsigned char * npub, const unsigned char * k);',
        '// int crypto_aead_chacha20poly1305_decrypt(unsigned char * m, unsigned long long * mlen_p, unsigned char * nsec, const unsigned char * c, unsigned long long clen, const unsigned char * ad, unsigned long long adlen, const unsigned char * npub, const unsigned char * k);',
        '// int crypto_aead_chacha20poly1305_decrypt_detached(unsigned char * m, unsigned char * nsec, const unsigned char * c, unsigned long long clen, const unsigned char * mac, const unsigned char * ad, unsigned long long adlen, const unsigned char * npub, const unsigned char * k);',
        '// int crypto_aead_xchacha20poly1305_ietf_decrypt(unsigned char * m, unsigned long long * mlen_p, unsigned char * nsec, const unsigned char * c, unsigned long long clen, const unsigned char * ad, unsigned long long adlen, const unsigned char * npub, const unsigned char * k);',
        '// int crypto_hash_sha512_update(crypto_hash_sha512_state * state, const unsigned char * in, unsigned long long inlen);',
        '// int crypto_hash_sha512_final(crypto_hash_sha512_state * state, unsigned char * out);',
        '// int crypto_hash_sha256_update(crypto_hash_sha256_state * state, const unsigned char * in, unsigned long long inlen);',
        '// int crypto_auth_hmacsha256_update(crypto_auth_hmacsha256_state * state, const unsigned char * in, unsigned long long inlen);',
        '// int crypto_auth_hmacsha256_final(crypto_auth_hmacsha256_state * state, unsigned char * out);',
        '// int crypto_generichash_blake2b_init_salt_personal(crypto_generichash_blake2b_state * state, const unsigned char * key, const size_t keylen, const size_t outlen, const unsigned char * salt, const unsigned char * personal);',
        '// int crypto_generichash_blake2b_final(crypto_generichash_blake2b_state * state, unsigned char * out, const size_t outlen);',
        '// int crypto_generichash_final(crypto_generichash_state * state, unsigned char * out, const size_t outlen);',
        '// int crypto_onetimeauth_poly1305_update(crypto_onetimeauth_poly1305_state * state, const unsigned char * in, unsigned long long inlen);',
        '// int crypto_onetimeauth_update(crypto_onetimeauth_state * state, const unsigned char * in, unsigned long long inlen);',
        '// int crypto_onetimeauth_final(crypto_onetimeauth_state * state, unsigned char * out);',
        '// int crypto_secretstream_xchacha20poly1305_init_push(crypto_secretstream_xchacha20poly1305_state * state, unsigned char[] header, const unsigned char[] k);',
        '// int crypto_secretstream_xchacha20poly1305_push(crypto_secretstream_xchacha20poly1305_state * state, unsigned char * c, unsigned long long * clen_p, const unsigned char * m, unsigned long long mlen, const unsigned char * ad, unsigned long long adlen, unsigned char tag);',
        '// int crypto_secretstream_xchacha20poly1305_init_pull(crypto_secretstream_xchacha20poly1305_state * state, const unsigned char[] header, const unsigned char[] k);',
        '// int crypto_secretstream_xchacha20poly1305_pull(crypto_secretstream_xchacha20poly1305_state * state, unsigned char * m, unsigned long long * mlen_p, unsigned char * tag_p, const unsigned char * c, unsigned long long clen, const unsigned char * ad, unsigned long long adlen);',
        '// int crypto_sign_ed25519ph_final_create(crypto_sign_ed25519ph_state * state, unsigned char * sig, unsigned long long * siglen_p, const unsigned char * sk);',
        '// int crypto_sign_update(crypto_sign_state * state, const unsigned char * m, unsigned long long mlen);',
        '// int crypto_sign_final_create(crypto_sign_state * state, unsigned char * sig, unsigned long long * siglen_p, const unsigned char * sk);',
        '// int crypto_sign_final_verify(crypto_sign_state * state, unsigned char * sig, const unsigned char * pk);',
        '// int sodium_mprotect_readonly(void * ptr);',
        '// int sodium_mprotect_readwrite(void * ptr);',
        '/*\n   * int MPI_Allreduce(void* sendbuf, void* recvbuf, int count, MPI_Datatype\n   * datatype, MPI_Op op, MPI_Comm comm)\n   */',
        '/*\n   * int MPI_Reduce_scatter(void* sendbuf, void* recvbuf, int *recvcounts,\n   * MPI_Datatype datatype, MPI_Op op, MPI_Comm comm)\n   */',
        '//    int numOfDays;',
        '// int x = sum(nums); // x = 40// int[] nums = {1, 6, 2, 6, 8, 2, 3, 9, 3};// Example:// and outputs the sum of all of the values in the array.// Write a method sum() that takes an int array of any size as input,// Iteration Problem 1:',
        '// int[][] varOlanMatris= {{0,1,1},{0,0,1},{0,1,0},{1,1,1}};\r',
        '// int Proutespline(Pedge_t * edges, int edgen, Ppolyline_t input, \t\t Ppoint_t * evs, Ppolyline_t * output) \r//3 9stmrdqlmufyk2wutp3totr5j\r//private static int opl;\r//private static int opn;\r// static int opn, opl\r//1 ds2k0zdfzruet3qxk0duytkjx\r//static private __ptr__ ops;\r// static Ppoint_t *ops\r//1 3k2f2er3efsrl0210su710vf\r',
        '// int[][] graph = {{1, 2}, {0, 2, 3}, {0, 1, 4}, {1, 4, 5}, {2, 3}, {3}};',
        '//int count = 0;',
        '// };//    int a= __offsetof__(1);// void test() {// typedef struct S {int m;} T;',
        '/** int scale = -1;\n        int level = -1;\n        int voltage = -1;\n        int temp = -1;\n\n        @Override\n        public void onReceive(Context context, Intent intent) {\n            level = intent.getIntExtra(BatteryManager.EXTRA_LEVEL, -1);\n            scale = intent.getIntExtra(BatteryManager.EXTRA_SCALE, -1);\n            temp = intent.getIntExtra(BatteryManager.EXTRA_TEMPERATURE, -1);\n            voltage = intent.getIntExtra(BatteryManager.EXTRA_VOLTAGE, -1);\n            Toast.makeText(context, "BAttery\'s dying!!", Toast.LENGTH_LONG).show();\n            Log.e("", "BATTERY LOW!!");\n        }\n    };**/'
        "//ValueEventListener postListener = new ValueEventListener() {",
        "//protected void workingExecuteValider() {",
        "//protected void workingProcedAnnulerTransactionItem() {",
        "// public static Thread thcashier;",
        "//  protected void onDestroy()",
        "//  protected void onResume()",
        "//private final PasswordEncoder passwordEncoder;",
        "//private void customActivateMainToolBar()",
        "//public void setAS7Config(AS7Config as7Config) { this.as7Config = as7Config; }",
        "// def creatreDetailsRow(contractorBillMainTable)",
        "//  private final StudentMapper studentMapper;",
        "//    private CheckboxField mBrowseVideos;//    private CheckboxField mBrowsePhotos; ",
        "//public void processAll() {\r",
        "// private LoadingProgressDialog dialog;",
        "//    private UserGroupMapper userGroupMapper;//\t@Autowired",
        "/*@\n   @ public behavior\n   @\n   @ post \\result != 0;\n   @*/",
        "//static int maxElevCA = 18000;//was 45000",
        "/*public void Shooter() \n    {\n        percent = 1;\n    }*/",
        "//private DualStack<>",
        "// a1.setB(a3.getB());",
        "// a1.getB().add(b3);",
        "// a2.getB().remove(b2);",
        "// void accept(float a1,int a2) ;",
        "// void accept(boolean a1,boolean a2,boolean a3) ;",
        "// public static Thread thcashier;",
        "//private float BRDrive = 1f;",
        "// void accept(T a1,byte a2) ;",
        "//{{{ reloadDirectory() method//}}}",
        "// ensures \\result == m_ClassIndex;",
        "// private String originalHashAlgorithm;",
        "/*! #if ($templateonly) !*/",
        "//boolean mRuning = true;",
        "//// protected abstract methods//",
        "//protected final Session getCurrentSession() {",
        "// fail s = Prim.failIO s",
        "//// private static methods//",
        "////     private Object contents;",
        "//    public static final Kernel Gausian3x3;",
        "//\tboolean isRET=false;",
        "/* public void setPrefix(){\n        updateTeams();\n    }*/",
        "//int count = 0;",
        "//protected void workingExecuteValider() {",
        "//  private final StudentMapper studentMapper;",
        "//private JPopupMenu popupMenu;",
        "// private helper functions",
        "// disablePower(self):",
        "// setProxIntHighThresh(self, threshold):",
        "// setGestureEnterThresh(self, threshold):",
        "// setGestureExitThresh(self, threshold):",
        "// setLightIntLowThreshold(self, threshold):",
        "// setLightIntHighThreshold(self, threshold):",
        "// setProximityIntLowThreshold(self, threshold):",
        "// setProximityIntHighThreshold(self, threshold):",
        "// clearAmbientLightInt(self):",
        "// clearProximityInt(self):",
        "// setValue(V newValue)\r",
        "//public ArrayList<EQStatementProposals> getEQStatements() {",
        "// int[][] graph = {{1, 2}, {0, 2, 3}, {0, 1, 4}, {1, 4, 5}, {2, 3}, {3}};",
        "//// final public methods//",
        "//// virtual public methods//",
        "// boolean testIntBool(int a2,boolean a1) ;",
        "// private static int intField = 1000000;",
        "// private boolean ispermitted = true;",
        "/* protected: request processing */",
        "//\r// void | changeStack()\r//\r",
        "//\r// void | swapSmallestLargest()\r//\r",
        "//private float BRDrive = 1f;",
        "//private static String getContent",
        "//}//public Image getImage(){// maybe???",
        "//    }////    {//    public void deliverCargo()",
        "// private int[] pointTexObj = new int[] { 0 };",
        "// private final DifferentialDriveOdometry m_odometry;",
        "//private void applySelectedTabChanged()",
        "//}// public boolean HomeBase(){",
        "//private void applySelectedTabChanged()",
        "// int applyAsIntInt1Obj2Obj0(int a2,T2 a3,T1 a1) ;",
        "// private final MatchClause[] clauses;",
        "//private HttpServletRequest request;",
        "//    private RefWatcher refWatcher;",
        "//    }//        reversed = !reversed;//    public void reverse() {",
        "//private final SubLCompiledFunction evaluationFunction;",
        "//private void applySelectedTabChanged()",
        "// public void apply_clique_reductions_wrt_degree_decrease_considering_subset_reductions()",
        "/*public boolean Stage1Loaded(){\n        return FeederStage1Sensor.getVoltage() < 0.1;\n\n    }*/",
        "//long time,time1;",
        "/*public Matrix4 buildMatrix4(float a11, float a12, float a13, float a14,\n                                      float a21, float a22, float a23, float a24,\n                                      float a31, float a32, float a33, float a34,\n                                      float a41, float a42, float a43, float a44) {\n        return new JmeMatrix4(a11, a12, a13, a14,\n                a21, a22, a23, a24,\n                a31, a32, a33, a34,\n                a41, a42, a43, a44);\n    }*/",
        "//private void applySelectedTabChanged()",
    ]
startswith_list = [
        "GEN-",
        "TODO",
        "renamed from",
        "Not implemented",
        "line",
        "Generated!",
        "! TODO",
    ]
contains_much_list = [
        '-',
        '=',
        '/',
        '*'
    ]


def delete_annotated_codes(comment):
    english_words = re.findall(r'\b[A-Za-z_]+\b', comment)
    if comment in annotated_codes:
        return False
    manual_check_res = ['public', 'private', 'protected', 'void']
    if len(english_words) > 0 and english_words[0] in manual_check_res:
        return False
    return True


def delete_special_situations(comment):
    if comment in special_situation:
        return False
    return True


def delete_comment_contains_at(comment):
    english_words = re.findall(r'\b[A-Za-z_]+\b', comment)
    if "@Override" in comment and (
        len(english_words) == 1
        or 'private' in comment
        or 'public' in comment
        or 'protected' in comment
    ):
        return False
    if (
        '@private' in comment
        or "@ReadOnly" in comment
        or '@generated' in comment
        or '@since' in comment
        or "@param" in comment
        or "@link" in comment
        or "@see" in comment
    ):
        return False
    if '@author' in comment:
        comments = comment.split('@author')
        for c in comments:
            if '@' in c:
                return False
    return True


def all_conditions(comment):
    if (
        delete_annotated_codes(comment)
        and delete_comment_contains_at(comment)
        and delete_special_situations(comment)
    ):
        return True
    return False


def main():
    input_file = ''
    output_file = ''
    with open(input_file, 'r') as infile, open(output_file, 'w', encoding='utf-8') as outfile:
        for line in infile:
            data = json.loads(line)
            code_summary = data['code_summary']
            code_snippets = data['code_snippets']
            if not all_conditions(code_summary):
                continue
            filtered_code_snippets = []
            sub_id = 0
            for code_snippet in code_snippets:
                code_snippet_summary = code_snippet['code_summary']
                if all_conditions(code_snippet_summary):
                    code_snippet['sub_id'] = sub_id
                    sub_id += 1
                    filtered_code_snippets.append(code_snippet)
            if len(filtered_code_snippets) == 0:
                continue
            data['code_snippets'] = filtered_code_snippets
            outfile.write(json.dumps(data) + '\n')


if __name__ == '__main__':
    main()
